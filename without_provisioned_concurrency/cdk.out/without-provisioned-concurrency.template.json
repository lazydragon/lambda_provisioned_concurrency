{
  "Resources": {
    "BackendWithoutProvisionedConcurrencyHandlerServiceRole674C8E7C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/BackendWithoutProvisionedConcurrencyHandler/ServiceRole/Resource"
      }
    },
    "BackendWithoutProvisionedConcurrencyHandlerServiceRoleDefaultPolicyD353B290": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "xray:PutTraceSegments",
                "xray:PutTelemetryRecords"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BackendWithoutProvisionedConcurrencyHandlerServiceRoleDefaultPolicyD353B290",
        "Roles": [
          {
            "Ref": "BackendWithoutProvisionedConcurrencyHandlerServiceRole674C8E7C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/BackendWithoutProvisionedConcurrencyHandler/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "BackendWithoutProvisionedConcurrencyHandlerB34101AE": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersf73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343S3Bucket73BCEE4E"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343S3VersionKeyDC1FA591"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersf73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343S3VersionKeyDC1FA591"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "backend.handler",
        "Role": {
          "Fn::GetAtt": [
            "BackendWithoutProvisionedConcurrencyHandlerServiceRole674C8E7C",
            "Arn"
          ]
        },
        "Runtime": "python3.7",
        "TracingConfig": {
          "Mode": "Active"
        }
      },
      "DependsOn": [
        "BackendWithoutProvisionedConcurrencyHandlerServiceRoleDefaultPolicyD353B290",
        "BackendWithoutProvisionedConcurrencyHandlerServiceRole674C8E7C"
      ],
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/BackendWithoutProvisionedConcurrencyHandler/Resource",
        "aws:asset:path": "asset.f73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343",
        "aws:asset:property": "Code"
      }
    },
    "WithoutProvisionedConcurrencyC7C89C76": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "WithoutProvisionedConcurrency"
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Resource"
      }
    },
    "WithoutProvisionedConcurrencyDeploymentFBA5B61F8f32f1ec1e6f73d443aa7230ce52140e": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "WithoutProvisionedConcurrencyC7C89C76"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "WithoutProvisionedConcurrencyproxyANY348EAD64",
        "WithoutProvisionedConcurrencyproxy3DAF5065",
        "WithoutProvisionedConcurrencyANYA3ECC7DC"
      ],
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Deployment/Resource"
      }
    },
    "WithoutProvisionedConcurrencyDeploymentStageprodFEE202FF": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "WithoutProvisionedConcurrencyC7C89C76"
        },
        "DeploymentId": {
          "Ref": "WithoutProvisionedConcurrencyDeploymentFBA5B61F8f32f1ec1e6f73d443aa7230ce52140e"
        },
        "StageName": "prod",
        "TracingEnabled": true
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/DeploymentStage.prod/Resource"
      }
    },
    "WithoutProvisionedConcurrencyCloudWatchRoleEA18B148": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/CloudWatchRole/Resource"
      }
    },
    "WithoutProvisionedConcurrencyAccount90DDE6E6": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "WithoutProvisionedConcurrencyCloudWatchRoleEA18B148",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "WithoutProvisionedConcurrencyC7C89C76"
      ],
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Account"
      }
    },
    "WithoutProvisionedConcurrencyproxy3DAF5065": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "WithoutProvisionedConcurrencyC7C89C76",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "WithoutProvisionedConcurrencyC7C89C76"
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/{proxy+}/Resource"
      }
    },
    "WithoutProvisionedConcurrencyproxyANYApiPermissionwithoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678ANYproxy45C761A3": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BackendWithoutProvisionedConcurrencyHandlerB34101AE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "WithoutProvisionedConcurrencyC7C89C76"
              },
              "/",
              {
                "Ref": "WithoutProvisionedConcurrencyDeploymentStageprodFEE202FF"
              },
              "/*/{proxy+}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/{proxy+}/ANY/ApiPermission.withoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678.ANY..{proxy+}"
      }
    },
    "WithoutProvisionedConcurrencyproxyANYApiPermissionTestwithoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678ANYproxy2DE48188": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BackendWithoutProvisionedConcurrencyHandlerB34101AE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "WithoutProvisionedConcurrencyC7C89C76"
              },
              "/test-invoke-stage/*/{proxy+}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/{proxy+}/ANY/ApiPermission.Test.withoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678.ANY..{proxy+}"
      }
    },
    "WithoutProvisionedConcurrencyproxyANY348EAD64": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "WithoutProvisionedConcurrencyproxy3DAF5065"
        },
        "RestApiId": {
          "Ref": "WithoutProvisionedConcurrencyC7C89C76"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackendWithoutProvisionedConcurrencyHandlerB34101AE",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/{proxy+}/ANY/Resource"
      }
    },
    "WithoutProvisionedConcurrencyANYApiPermissionwithoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678ANY9C469C19": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BackendWithoutProvisionedConcurrencyHandlerB34101AE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "WithoutProvisionedConcurrencyC7C89C76"
              },
              "/",
              {
                "Ref": "WithoutProvisionedConcurrencyDeploymentStageprodFEE202FF"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/ANY/ApiPermission.withoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678.ANY.."
      }
    },
    "WithoutProvisionedConcurrencyANYApiPermissionTestwithoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678ANY4CDE5A6F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "BackendWithoutProvisionedConcurrencyHandlerB34101AE",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:ap-southeast-1:",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "WithoutProvisionedConcurrencyC7C89C76"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/ANY/ApiPermission.Test.withoutprovisionedconcurrencyWithoutProvisionedConcurrency27A37678.ANY.."
      }
    },
    "WithoutProvisionedConcurrencyANYA3ECC7DC": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "WithoutProvisionedConcurrencyC7C89C76",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "WithoutProvisionedConcurrencyC7C89C76"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:ap-southeast-1:lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "BackendWithoutProvisionedConcurrencyHandlerB34101AE",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "without-provisioned-concurrency/WithoutProvisionedConcurrency/Default/ANY/Resource"
      }
    }
  },
  "Parameters": {
    "AssetParametersf73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343S3Bucket73BCEE4E": {
      "Type": "String",
      "Description": "S3 bucket for asset \"f73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343\""
    },
    "AssetParametersf73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343S3VersionKeyDC1FA591": {
      "Type": "String",
      "Description": "S3 key for asset version \"f73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343\""
    },
    "AssetParametersf73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343ArtifactHash3F78A2BC": {
      "Type": "String",
      "Description": "Artifact hash for asset \"f73636aba3b6e878205625546539ae93a9e347ecf9978a036f1f4ed4ad466343\""
    }
  },
  "Outputs": {
    "WithoutProvisionedConcurrencyEndpointEA736A42": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "WithoutProvisionedConcurrencyC7C89C76"
            },
            ".execute-api.ap-southeast-1.",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "WithoutProvisionedConcurrencyDeploymentStageprodFEE202FF"
            },
            "/"
          ]
        ]
      }
    }
  }
}